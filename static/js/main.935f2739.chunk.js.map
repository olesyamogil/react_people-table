{"version":3,"sources":["components/Person/Person.js","components/PeopleTable/PeopleTable.js","components/Filter/Filter.js","components/SortingButtonGroup/SortingButtonGroup.js","App.js","index.js"],"names":["Person","props","person","sexClassName","sex","react_default","a","createElement","data-person-id","id","onClick","handleClick","className","concat","Math","ceil","died","selectedPersonId","born","name","mother","father","defaultProps","PeopleTable","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","selectPerson","event","target","closest","dataset","personId","setState","state","_this2","people","map","components_Person_Person","key","Component","Filter","type","onChange","onFilterChanged","SortingButtonGroup","Fragment","changeSortingType","data-sorting-type","App","getPeople","tableData","getFilter","filter","getSortingType","sortingType","getVisiblePeople","createSelector","includes","sort","b","loadTable","URL","fetch","then","response","json","data","peopleWithIds","index","_objectSpread","value","visiblePeople","components_SortingButtonGroup_SortingButtonGroup","components_Filter_Filter","components_PeopleTable_PeopleTable","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.935f2739.chunk.js","sourcesContent":["import React from 'react';\nimport './Person.css';\nimport PropTypes from 'prop-types';\n\nconst Person = (props) => {\n  const { person } = props;\n  let sexClassName = '';\n\n  if (person.sex === 'm') {\n    sexClassName = 'male';\n  } else if (person.sex === 'f') {\n    sexClassName = 'female';\n  }\n\n  return (\n    <tr\n      data-person-id={person.id}\n      onClick={props.handleClick}\n      className={`\n        Person \n        Person--${sexClassName} \n        Person--lived-in-${Math.ceil(person.died / 100)}\n        ${props.selectedPersonId === person.id ? 'Person--selected' : ''}\n        `}\n    >\n      <td className=\"person-id\">{person.id}</td>\n      <td\n        className={`person-name ${person.born < 1650 ? 'crossed-out' : ''}`}\n      >\n        {person.name}\n      </td>\n      <td className=\"person-sex\">{person.sex}</td>\n      <td className=\"person-born\">{person.born}</td>\n      <td className=\"person-died\">{person.died}</td>\n      <td\n        className={`\n          person-age \n          ${person.died - person.born >= 65 ? 'highlighted' : ''}\n          `}\n      >\n        {person.died - person.born}\n      </td>\n      <td className=\"person-century\">{Math.ceil(person.died / 100)}</td>\n      <td className=\"person-mother\">{person.mother}</td>\n      <td className=\"person-father\">{person.father}</td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  person: PropTypes.objectOf(PropTypes.any),\n  handleClick: PropTypes.func,\n  selectedPersonId: PropTypes.number,\n};\n\nPerson.defaultProps = {\n  person: {},\n  handleClick: {},\n  selectedPersonId: -1,\n};\n\nexport default Person;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './PeopleTable.css';\nimport Person from '../Person/Person';\n\nclass PeopleTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedPersonId: -1,\n    };\n  }\n\n  selectPerson = (event) => {\n    const selectedPersonId = +event.target.closest('.Person').dataset.personId;\n\n    this.setState({ selectedPersonId });\n  };\n\n  render() {\n    return (\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr>\n            <td>id</td>\n            <td>name</td>\n            <td>sex</td>\n            <td>born</td>\n            <td>died</td>\n            <td>age</td>\n            <td>century</td>\n            <td>mother</td>\n            <td>father</td>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            this.props.people.map(person => (\n              <Person\n                person={person}\n                key={person.id}\n                handleClick={this.selectPerson}\n                selectedPersonId={this.state.selectedPersonId}\n              />\n            ))\n          }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPeopleTable.defaultProps = {\n  people: [],\n};\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = props => (\n  <input type=\"text\" onChange={props.onFilterChanged} />\n);\n\nFilter.defaultProps = {\n  onFilterChanged: {},\n};\n\nFilter.propTypes = {\n  onFilterChanged: PropTypes.func,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SortingButtonGroup = props => (\n  <>\n    <button\n      type=\"button\"\n      onClick={props.changeSortingType}\n      data-sorting-type=\"name\"\n    >\n      Sort by name\n    </button>\n    <button\n      type=\"button\"\n      onClick={props.changeSortingType}\n      data-sorting-type=\"id\"\n    >\n      Sort by id\n    </button>\n    <button\n      type=\"button\"\n      onClick={props.changeSortingType}\n      data-sorting-type=\"sex\"\n    >\n    Sort by sex\n    </button>\n    {' '}\n    <button\n      type=\"button\"\n      onClick={props.changeSortingType}\n      data-sorting-type=\"born\"\n    >\n    Sort by born\n    </button>\n    {' '}\n    <button\n      type=\"button\"\n      onClick={props.changeSortingType}\n      data-sorting-type=\"died\"\n    >\n    Sort by died\n    </button>\n    {' '}\n    <button\n      type=\"button\"\n      onClick={props.changeSortingType}\n      data-sorting-type=\"age\"\n    >\n    Sort by age\n    </button>\n    <button\n      type=\"button\"\n      onClick={props.changeSortingType}\n      data-sorting-type=\"century\"\n    >\n      Sort by century\n    </button>\n  </>\n);\n\nSortingButtonGroup.defaultProps = {\n  changeSortingType: {},\n};\n\nSortingButtonGroup.propTypes = {\n  changeSortingType: PropTypes.func,\n};\n\nexport default SortingButtonGroup;\n","import React, { Component } from 'react';\nimport { createSelector } from 'reselect';\nimport PeopleTable from './components/PeopleTable/PeopleTable';\nimport Filter from './components/Filter/Filter';\n// eslint-disable-next-line max-len\nimport SortingButtonGroup from './components/SortingButtonGroup/SortingButtonGroup';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: '',\n      sortingType: '',\n      tableData: [],\n      URL: 'https://mate-academy.github.io/react_people-table/api/people.json',\n    };\n  }\n\n  componentDidMount() {\n    this.loadTable(this.state.URL);\n  }\n\n  getPeople = state => state.tableData;\n\n  getFilter = state => state.filter;\n\n  getSortingType = state => state.sortingType;\n\n  getVisiblePeople = createSelector(\n    [this.getPeople, this.getFilter, this.getSortingType],\n    (people, filter, sortingType) => people.filter(person => (\n      person.name.includes(filter)\n      || person.name.includes(filter)\n      || person.name.includes(filter)\n    )).sort((a, b) => {\n      if (a[sortingType] > b[sortingType]) { return 1; }\n\n      return -1;\n    })\n  );\n\n  loadTable = URL => fetch(URL)\n    .then(response => response.json())\n    .then((data) => {\n      const peopleWithIds = data.map((person, index) => (\n        { ...person, id: index + 1 }\n      ));\n\n      this.setState({ tableData: peopleWithIds });\n    });\n\n  onFilterChanged = (event) => {\n    this.setState({ filter: event.target.value });\n  };\n\n  changeSortingType = (event) => {\n    this.setState({ sortingType: event.target.dataset.sortingType });\n  };\n\n  render() {\n    const visiblePeople = this.getVisiblePeople(this.state);\n\n    return (\n      <>\n        <SortingButtonGroup changeSortingType={this.changeSortingType} />\n        <Filter onFilterChanged={this.onFilterChanged} />\n        <PeopleTable people={visiblePeople} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App test={123} />, document.getElementById('root'));\r\n"],"sourceRoot":""}