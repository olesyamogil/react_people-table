(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,n){e.exports=n(17)},15:function(e,t,n){},16:function(e,t,n){},17:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(7),c=n.n(o),l=n(8),i=n(1),s=n(2),u=n(4),d=n(3),p=n(5),m=n(9),g=(n(15),n(16),function(e){var t=e.person,n="";return"m"===t.sex?n="male":"f"===t.sex&&(n="female"),r.a.createElement("tr",{"data-person-id":t.id,onClick:e.handleClick,className:"\n        Person \n        Person--".concat(n," \n        Person--lived-in-").concat(Math.ceil(t.died/100),"\n        ").concat(e.selectedPersonId===t.id?"Person--selected":"","\n        ")},r.a.createElement("td",{className:"person-id"},t.id),r.a.createElement("td",{className:"person-name ".concat(t.born<1650?"crossed-out":"")},t.name),r.a.createElement("td",{className:"person-sex"},t.sex),r.a.createElement("td",{className:"person-born"},t.born),r.a.createElement("td",{className:"person-died"},t.died),r.a.createElement("td",{className:"\n          person-age \n          ".concat(t.died-t.born>=65?"highlighted":"","\n          ")},t.died-t.born),r.a.createElement("td",{className:"person-century"},Math.ceil(t.died/100)),r.a.createElement("td",{className:"person-mother"},t.mother),r.a.createElement("td",{className:"person-father"},t.father))});g.defaultProps={person:{},handleClick:{},selectedPersonId:-1};var b=g,y=function(e){function t(e){var n;return Object(i.a)(this,t),(n=Object(u.a)(this,Object(d.a)(t).call(this,e))).selectPerson=function(e){var t=+e.target.closest(".Person").dataset.personId;n.setState({selectedPersonId:t})},n.state={selectedPersonId:-1},n}return Object(p.a)(t,e),Object(s.a)(t,[{key:"render",value:function(){var e=this;return r.a.createElement("table",{className:"PeopleTable"},r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("td",null,"id"),r.a.createElement("td",null,"name"),r.a.createElement("td",null,"sex"),r.a.createElement("td",null,"born"),r.a.createElement("td",null,"died"),r.a.createElement("td",null,"age"),r.a.createElement("td",null,"century"),r.a.createElement("td",null,"mother"),r.a.createElement("td",null,"father"))),r.a.createElement("tbody",null,this.props.people.map(function(t){return r.a.createElement(b,{person:t,key:t.id,handleClick:e.selectPerson,selectedPersonId:e.state.selectedPersonId})})))}}]),t}(a.Component);y.defaultProps={people:[]};var h=y,f=function(e){return r.a.createElement("input",{type:"text",onChange:e.onFilterChanged})};f.defaultProps={onFilterChanged:{}};var E=f,P=function(e){return r.a.createElement(r.a.Fragment,null,r.a.createElement("button",{type:"button",onClick:e.changeSortingType,"data-sorting-type":"name"},"Sort by name"),r.a.createElement("button",{type:"button",onClick:e.changeSortingType,"data-sorting-type":"id"},"Sort by id"),r.a.createElement("button",{type:"button",onClick:e.changeSortingType,"data-sorting-type":"sex"},"Sort by sex")," ",r.a.createElement("button",{type:"button",onClick:e.changeSortingType,"data-sorting-type":"born"},"Sort by born")," ",r.a.createElement("button",{type:"button",onClick:e.changeSortingType,"data-sorting-type":"died"},"Sort by died")," ",r.a.createElement("button",{type:"button",onClick:e.changeSortingType,"data-sorting-type":"age"},"Sort by age"),r.a.createElement("button",{type:"button",onClick:e.changeSortingType,"data-sorting-type":"century"},"Sort by century"))};P.defaultProps={changeSortingType:{}};var O=P;function S(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}var j=function(e){function t(e){var n;return Object(i.a)(this,t),(n=Object(u.a)(this,Object(d.a)(t).call(this,e))).getPeople=function(e){return e.tableData},n.getFilter=function(e){return e.filter},n.getSortingType=function(e){return e.sortingType},n.getVisiblePeople=Object(m.a)([n.getPeople,n.getFilter,n.getSortingType],function(e,t,n){return e.filter(function(e){return e.name.includes(t)||e.name.includes(t)||e.name.includes(t)}).sort(function(e,t){return e[n]>t[n]?1:-1})}),n.loadTable=function(e){return fetch(e).then(function(e){return e.json()}).then(function(e){var t=e.map(function(e,t){return function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?S(n,!0).forEach(function(t){Object(l.a)(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):S(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}({},e,{id:t+1})});n.setState({tableData:t})})},n.onFilterChanged=function(e){n.setState({filter:e.target.value})},n.changeSortingType=function(e){n.setState({sortingType:e.target.dataset.sortingType})},n.state={filter:"",sortingType:"",tableData:[],URL:"https://mate-academy.github.io/react_people-table/api/people.json"},n}return Object(p.a)(t,e),Object(s.a)(t,[{key:"componentDidMount",value:function(){this.loadTable(this.state.URL)}},{key:"render",value:function(){var e=this.getVisiblePeople(this.state);return r.a.createElement(r.a.Fragment,null,r.a.createElement(O,{changeSortingType:this.changeSortingType}),r.a.createElement(E,{onFilterChanged:this.onFilterChanged}),r.a.createElement(h,{people:e}))}}]),t}(a.Component);c.a.render(r.a.createElement(j,{test:123}),document.getElementById("root"))}},[[10,1,2]]]);
//# sourceMappingURL=main.935f2739.chunk.js.map